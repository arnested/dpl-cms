<?php

/**
 * @file
 * Base update hooks.
 *
 * These get run BEFORE config-import.
 * This is where you enable/disable modules, as core.extension.yml is in
 * config_ignore as library administrators can add their own modules.
 */

use Drupal\Core\Extension\ModuleInstallerInterface;
use Drupal\drupal_typed\DrupalTyped;

/**
 * Run on the initial site setup.
 *
 * Remember to references to individual update hooks, as these updates probably
 * will want to happen both on new and existing sites.
 */
function dpl_update_install(): string {
  $messages[] = dpl_update_update_10001();
  $messages[] = dpl_update_update_10002();
  $messages[] = dpl_update_update_10003();
  $messages[] = dpl_update_update_10004();

  return implode('\r\n', $messages);
}

/**
 * Installing config_ignore_auto module.
 *
 * This is mostly here as an example for how to enable modules in the future.
 */
function dpl_update_update_10001(): string {
  return _dpl_update_install_modules(['config_ignore_auto']);
}

/**
 * Install collation_fixer module.
 */
function dpl_update_update_10002(): string {
  return _dpl_update_install_modules(['collation_fixer']);
}

/**
 * Installing config_perms module.
 */
function dpl_update_update_10003(): string {
  return _dpl_update_install_modules(['config_perms']);
}

/**
 * Installing verf module.
 */
function dpl_update_update_10004(): string {
  return _dpl_update_install_modules(['verf']);
}

/**
 * Helper function to install modules.
 *
 * @param string[] $modules
 *   The modules to install.
 *
 * @return string
 *   The feedback message.
 */
function _dpl_update_install_modules(array $modules): string {
  DrupalTyped::service(ModuleInstallerInterface::class, 'module_installer')->install($modules);
  $modules_string = implode(', ', $modules);
  return "Enabled modules: {$modules_string}.";
}
