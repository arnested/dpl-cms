<?php

use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\dpl_related_content\Services\RelatedContent;
use Drupal\drupal_typed\DrupalTyped;
use Drupal\node\NodeInterface;

/**
 * Place a dynamic 'related content' list on articles and eventinstances.
 *
 * Content displayed is based on the field values of the current page entity.
 */
function dpl_related_content_preprocess_page(array &$variables): void {
  $route_name = \Drupal::routeMatch()->getRouteName();

  // We only want to display the related content slider on eventinstances, OR
  // on article nodes.
  if ($route_name === 'entity.node.canonical') {
    $entity = \Drupal::routeMatch()->getParameter('node');

    if (!($entity instanceof NodeInterface) || $entity->bundle() !== 'article') {
      return;
    }
  }
  elseif ($route_name === 'entity.eventinstance.canonical') {
    $entity = \Drupal::routeMatch()->getParameter('eventinstance');
  }
  else {
    return;
  }

  if (!($entity instanceof FieldableEntityInterface)) {
    return;
  }

  try {
    $service = DrupalTyped::service(RelatedContent::class, 'dpl_related_content.related_content');

    $variables['related_content'] = $service->getContentFromEntity($entity);
  }
  catch (\Exception $e) {
    \Drupal::logger('dpl_related_content')->error(
      'Could not render related content slider. Exception: {exception}',
      ['exception' => $e->getMessage()]
    );
  }
}

/**
 * Implements hook_theme().
 */
function dpl_related_content_theme(array $existing, string $type, string $theme, string $path): array {
  return [
    'dpl_related_content_slider' => [
      'variables' => [
        'title' => t('Related content', [], ['context' => 'DPL related content']),
        'items' => [],
      ],
    ],
  ];
}
