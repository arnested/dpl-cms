# These workflows takes care of various CI tests.
on: pull_request
name: CI Tests
env:
  PHP_VERSION: 8.0
  COMPOSER_VERSION: v2

jobs:
  ValidateComposer:
    name: Validate Composer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none
          tools: composer:${{ env.COMPOSER_VERSION }}
      - name: Validate composer.json
        run: |
          composer validate --no-check-all --no-check-publish

  Phpcs:
    name: Lint PHP
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}
        tools: composer:${{ env.COMPOSER_VERSION }}
        coverage: none
        extensions: gd
    - name: Install Dependencies
      run: |
        composer install --no-interaction --no-progress
    - name: Run phpcs
      uses: reload/action-phpcs@main
      with:
        reviewdog_token: ${{ secrets.GITHUB_TOKEN }}

  Phpstan:
    name: Analyse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none
          tools: composer:${{ env.COMPOSER_VERSION }}
      - name: Install composer dependencies
        run: |
          composer install --no-interaction --no-progress
          # Add vendor/bin to PATH for subsequent steps, see https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#adding-a-system-path
          composer config bin-dir --absolute >> "${GITHUB_PATH}"
      - name: PHPStan analyse
        run: |
          phpstan

  PhpUnit:
    name: Run PHP unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer:${{ env.COMPOSER_VERSION }}
          coverage: xdebug
          extensions: gd
      - name: Install Dependencies
        run: |
          composer install --no-interaction --no-progress
      - name: Run PhpUnit
        run: ./vendor/bin/phpunit --coverage-text

  LightHouse:
    name: Test site performance using Lighthouse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Our Taskfile requires a proper checkout to function because of
          # certain vars.
          fetch-depth: 0
      - name: Install go-task
        uses: arduino/setup-task@v1
      - name: Setup site
        run: task ci:reset
      - name: Setup DNS for containers
        run: echo "127.0.0.1 dpl-cms.docker" | sudo tee -a /etc/hosts
      - name: Run Lighthouse test
        uses: treosh/lighthouse-ci-action@v8
        with:
          urls: |
            http://dpl-cms.docker
          configPath: './.lighthouserc.js'
          # Use 3 runs to test both cold and warm caches.
          runs: 3
          # Update to Googles public storage to make reports easily accessible.
          # The fact that the storage is public is fine. The project is open.
          temporaryPublicStorage: true
          # Keep artifacts since temporary reports may not be available during
          # reviews which may occur later in time.
          uploadArtifacts: true

  Pa11y:
    name: Test accessibility using Pa11y
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Our Taskfile requires a proper checkout to function because of
          # certain vars.
          fetch-depth: 0
          # Needed to make HTTP authentication work
          persist-credentials: false
      - name: Install go-task
        uses: arduino/setup-task@v1
      - name: Setup site
        run: task ci:reset
      - name: Setup DNS for containers
        run: echo "127.0.0.1 dpl-cms.docker" | sudo tee -a /etc/hosts
        # git with HTTP authentication provides an easy way for us to install
        # unreleased commits of NPM projects.
      - name: Reconfigure git to use HTTP authentication
        run: git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf ssh://git@github.com/
      - name: Install node packages
        uses: bahmutov/npm-install@v1
      - name: Run Pa11y
        run: npx pa11y-ci
