on:
  pull_request_target:

    # We have two groups of jobs in this workflow that reacts on actions:
    #
    # 1. We update the status of a Github Deployment on:
    # - opened
    # - synchronize
    # - reopened
    # - closed
    #
    # 2. We forward all events to lagoon via InformLagoon
    types: [ opened, synchronize, reopened, closed, edited ]
name: Inform Lagoon

env:
  LAGOON_HOST: "dplplat01.dpl.reload.dk"
  LAGOON_PROJECT: "dpl-cms"

jobs:
  # We only permit the integration with Lagoon to run if the user is
  # authorized. This saves on resources and ensures we only spin up sites for
  # legitimate contributions.
  # The integration is controlled by creating synthetic events related to select
  # pull-request events, and send them to Lagoon.
  #
  # The job expects the following secrets:
  # LAGOON_WEBHOOK_URL: The url events are to be delivered to
  # LAGOON_WEBHOOK_SECRET: Shared lagoon webhook secret
  #
  InformLagoon:
    name: Send synthetic event to Lagoon
    runs-on: ubuntu-latest
    env:
      webhook_url: ${{ secrets.LAGOON_WEBHOOK_URL }}
      webhook_secret: ${{ secrets.LAGOON_WEBHOOK_SECRET }}
    steps:
    - name: Verify secrets are set
      id: check_env
      run: |
        # Set default
        ok="true"

        # Then go about checking the variables
        if [[ -z "${webhook_url:-}" ]]; then
          echo "Could not read secret LAGOON_WEBHOOK_URL, will not send event to Lagoon"
          ok="false"
        fi

        if [[ -z "${webhook_secret:-}" ]]; then
          echo "Could not read secret LAGOON_WEBHOOK_SECRET, will not send event to Lagoon"
          ok="false"
        fi

        if [[ "${ok}" == "false"]]; then
          echo "This workflow has most likely been triggered by a user that does"
          echo "have the necessary access to the required Github secrets."
          echo
          echo "Aborting workflow"
          exit 1
        fi
    - name: Debug
      run: |
        export
        git rev-parse refs/pull/${{ github.event.number }}/merge

    - name: Send pull request event
      uses: distributhor/workflow-webhook@v2
      env:
        verbose: true
        webhook_type: 'json-extended'
